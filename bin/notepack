#!/bin/bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done

# Real directory the file exists
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

# Current Working Directory
CWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"


start_watching () {
  node $DIR/../src/watch.js --background > /dev/null &
  disown
  echo -n $! >> $DIR/../.WATCHING
  printf "\033[0;34mWatching notes in the background (pid: $!)...\033[0m\n"
}

stop_watching () {
  kill $(< $DIR/../.WATCHING)
}

todos () {
  if [ $1 ]
    then
      node $DIR/../src/todos.js --asignedTo $1
    else
      node $DIR/../src/todos.js
  fi
}

update() {
  node $DIR/../src/updateTodos.js
}

watch() {
  if [ -f ".WATCHING" ]
    then
      if ps -p $(< .WATCHING) > /dev/null
        then
          printf "\033[0;31mAlready watching (pid: $(< ".WATCHING"))...\033[0m\n"
        else
          rm .WATCHING
          start_watching
      fi
    else
      start_watching
  fi
}

case "$1" in
"configure")
  node $DIR/../src/configure.js --cwd $CWD
  ;;
"stop")
  stop_watching
  ;;
"todos")
  todos $2
  ;;
"update")
  update
  ;;
"watch")
  watch
  ;;
*)
  todos
  ;;
esac